-- Retrieve the 100 most recent database backups with details
SELECT TOP 100
    s.database_name,  -- Name of the backed-up database

    m.physical_device_name,  -- Path to the backup file on disk or tape

    -- Backup size in MB, casted to string for display
    CAST(CAST(s.backup_size / 1000000 AS INT) AS VARCHAR(14)) + ' MB' AS bkSize,

    -- Time taken for the backup in seconds
    CAST(DATEDIFF(second, s.backup_start_date, s.backup_finish_date) AS VARCHAR(4)) + ' Seconds' AS TimeTaken,

    s.backup_start_date,  -- When the backup started

    -- LSNs are useful for point-in-time recovery or log chain analysis
    CAST(s.first_lsn AS VARCHAR(50)) AS first_lsn,
    CAST(s.last_lsn AS VARCHAR(50)) AS last_lsn,

    -- Human-readable backup type: Full, Differential, or Transaction Log
    CASE s.[type]
        WHEN 'D' THEN 'Full'
        WHEN 'I' THEN 'Differential'
        WHEN 'L' THEN 'Transaction Log'
        ELSE 'Other'
    END AS BackupType,

    s.server_name,       -- Name of the server where the backup was taken
    s.recovery_model     -- Recovery model of the database at the time of backup

FROM msdb.dbo.backupset s
INNER JOIN msdb.dbo.backupmediafamily m
    ON s.media_set_id = m.media_set_id

-- Filter for backup types: Full, Differential, or Log
WHERE s.[type] IN ('D', 'I', 'L')

-- Optionally filter for a specific database
-- AND s.database_name = 'YourDatabaseName'

ORDER BY s.backup_start_date DESC, s.backup_finish_date;



/*
SELECT TOP 100
s.database_name,
m.physical_device_name,
CAST(CAST(s.backup_size / 1000000 AS INT) AS VARCHAR(14)) + ' ' + 'MB' AS bkSize,
CAST(DATEDIFF(second, s.backup_start_date,
s.backup_finish_date) as VARCHAR(4)) + ' ' + 'Seconds' TimeTaken,
s.backup_start_date,
CAST(s.first_lsn AS VARCHAR(50)) AS first_lsn,
CAST(s.last_lsn AS VARCHAR(50)) AS last_lsn,

CASE s.[type]
WHEN 'D' THEN 'Full'
WHEN 'I' THEN 'Differential'
WHEN 'L' THEN 'Transaction Log'

END AS BackupType,
s.server_name,
s.recovery_model
FROM msdb.dbo.backupset s

INNER JOIN msdb.dbo.backupmediafamily m ON s.media_set_id = m.media_set_id
WHERE (s.[type]='D' or s.[type]='I' or s.[type]='L')
--and s.database_name = ''
ORDER BY backup_start_date DESC, backup_finish_date
*/
